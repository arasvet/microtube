openapi: 3.1.0
info:
  title: microtube API
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /auth/register:
    post:
      summary: Register user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string }
                password: { type: string }
              required: [email, password]
      responses:
        "200": { description: OK }
  /auth/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: { type: string }
                password: { type: string }
              required: [email, password]
      responses:
        "200": { description: OK }
  /events:
    post:
      summary: Ingest event
      responses:
        "201": { description: Created }
        "200": { description: Duplicate }
  /search:
    get:
      summary: Search videos
      parameters:
        - in: query
          name: q
          required: true
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer }
        - in: query
          name: offset
          schema: { type: integer }
      responses:
        "200": { description: OK }
  /videos/feed:
    get:
      summary: Video feeds
      parameters:
        - in: query
          name: type
          schema: { type: string, enum: [popular, commented, random] }
        - in: query
          name: limit
          schema: { type: integer }
      responses:
        "200": { description: OK }
  /recommendations:
    get:
      summary: Recommendations
      parameters:
        - in: query
          name: user_id
          schema: { type: string }
        - in: query
          name: session_id
          schema: { type: string }
        - in: query
          name: limit
          schema: { type: integer }
      responses:
        "200": { description: OK }
  /stats/overview:
    get:
      summary: Stats overview (admin only)
      parameters:
        - in: query
          name: from
          schema: { type: string, format: date-time }
        - in: query
          name: to
          schema: { type: string, format: date-time }
        - in: query
          name: top
          schema: { type: integer }
      responses:
        "200": { description: OK }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
